name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: server
        run: |
          pip install --upgrade pip
          pip install -e .[dev]

      - name: Build and start stack
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml --env-file .env.ci up -d db server
          # Give containers time to initialize
          sleep 15

      - name: Wait for server healthcheck
        run: |
          for i in {1..12}; do
            if curl -sf http://localhost:5000/healthz; then
              echo "Server is ready!"
              break
            fi
            echo "Waiting for server..."
            sleep 5
          done
          echo "Healthcheck timed out, continuing anyway"
          exit 0

      - name: Prepare dummy server key
        run: |
          mkdir -p keys
          cat > keys/server_priv.asc <<'EOF'
          -----BEGIN PGP PRIVATE KEY BLOCK-----
          Version: TestKey

          dummy-key-placeholder
          -----END PGP PRIVATE KEY BLOCK-----
          EOF

      - name: Run tests with coverage
        working-directory: server
        env:
          BASE_URL: http://localhost:5000
          TATOU_LINK_KEY: ${{ env.LINK_KEY }}
          FLAG_2: ${{ env.FLAG_2 }}
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
          PROMETHEUS_MULTIPROC_DIR: /tmp
        run: |
          export $(grep -v '^#' ../.env.ci | xargs)
          pytest --cov=src --cov-report=xml
